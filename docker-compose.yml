services:
  backend:
    build:
      context: ./backend
      target: dev
    container_name: survivor_backend
    restart: unless-stopped
    env_file: .env
    environment:
      # Typical DB URL env for ORMs / drivers
      DATABASE_URL: ${DATABASE_URL}
      NODE_ENV: development
    ports:
      - "3000:3000"
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./backend:/app
      - /app/node_modules
    command: ["npm", "run", "dev"]

  frontend:
    build:
      context: ./frontend
      target: dev
    container_name: survivor_frontend
    restart: unless-stopped
    env_file: .env
    environment:
      VITE_BACKEND_URL: ${VITE_BACKEND_URL}
      NODE_ENV: development
    ports:
      - "5173:5173"
    depends_on:
      - backend
    volumes:
      - ./frontend:/app
      - /app/node_modules
    command: ["npm", "run", "dev", "--", "--host", "0.0.0.0"]

volumes:
  pg_data:

# --- Notes ---
# 1. Copy .env.example -> .env before running.
# 2. For production you can build with production targets:
#    docker compose build --no-cache --progress=plain \
#      --build-arg NODE_ENV=production
#    And adjust each service to use target: prod (uncomment below example lines):
# backend:
#   build:
#     context: ./backend
#     target: prod
# frontend:
#   build:
#     context: ./frontend
#     target: prod
#   ports:
#     - "8080:80"   # nginx serving static build
